# Defines a loose CFG for FunQL based on definitions here:
# https://www.cs.utexas.edu/~ml/wasp/geo-funql.html

ROOT => answer ( ##ANY )
ROOT => answer ( ##NUMBER )

PLACEHOLDER => m0
PLACEHOLDER => m1

COUNTRY => ##PLACEHOLDER
STATE => ##PLACEHOLDER
RIVER => ##PLACEHOLDER
PLACE => ##PLACEHOLDER
CITY => ##PLACEHOLDER

ANY => ##COUNTRY
ANY => ##STATE
ANY => ##RIVER
ANY => ##PLACE
ANY => ##CITY

CITY => capital
CITY => city
PLACE => lake
PLACE => mountain
PLACE => place
RIVER => river
STATE => state
NUMBER => 0

MAJOR => major

CITY => intersection ( ##MAJOR , ##CITY )
RIVER => intersection ( ##MAJOR , ##RIVER )
PLACE => intersection ( ##MAJOR , ##PLACE )

PLACE_TO_PLACE => smallest
STATE_TO_STATE => smallest
CITY_TO_CITY => smallest
NUMBER_TO_NUMBER => smallest

PLACE_TO_PLACE => largest
STATE_TO_STATE => largest
CITY_TO_CITY => largest
NUMBER_TO_NUMBER => largest

PLACE_TO_PLACE => highest
PLACE_TO_PLACE => lowest

RIVER_TO_RIVER => longest
RIVER_TO_RIVER => shortest

ANY_TO_NUMBER => count
NUMBER_TO_NUMBER => sum

STATE_TO_NUMBER => area_1
STATE_TO_CITY => capital_1
CITY_TO_STATE => capital_2
STATE_TO_NUMBER => density_1
CITY_TO_NUMBER => density_1
PLACE_TO_NUMBER => elevation_1
NUMBER_TO_PLACE => elevation_2
CITY_TO_STATE => loc_1
RIVER_TO_STATE => loc_1
PLACE_TO_STATE => loc_1

COUNTRY_TO_STATE => loc_2
COUNTRY_TO_RIVER => loc_2
COUNTRY_TO_CITY => loc_2
COUNTRY_TO_PLACE => loc_2

STATE_TO_RIVER => loc_2
STATE_TO_CITY => loc_2
STATE_TO_PLACE => loc_2

COUNTRY_TO_PLACE => high_point_1
STATE_TO_PLACE => high_point_1
PLACE_TO_STATE => high_point_2
PLACE_TO_PLACE => higher_2

COUNTRY_TO_PLACE => low_point_1
STATE_TO_PLACE => low_point_1
PLACE_TO_STATE => low_point_2
PLACE_TO_PLACE => lower_2

STATE_TO_STATE => next_to_1
STATE_TO_STATE => next_to_2
RIVER_TO_STATE => next_to_2

STATE_TO_NUMBER => population_1
CITY_TO_NUMBER => population_1

RIVER_TO_STATE => traverse_1
STATE_TO_RIVER => traverse_2
RIVER_TO_RIVER => longer
RIVER_TO_NUMBER => len
ANY_TO_NUMBER => size

RIVER => ##RIVER_TO_RIVER ( ##RIVER )
RIVER => ##STATE_TO_RIVER ( ##STATE )
RIVER => ##COUNTRY_TO_RIVER ( ##COUNTRY )

PLACE => ##PLACE_TO_PLACE ( ##PLACE )
PLACE => ##NUMBER_TO_PLACE ( ##NUMBER )
PLACE => ##COUNTRY_TO_PLACE ( ##COUNTRY )
PLACE => ##STATE_TO_PLACE ( ##STATE )

STATE => ##COUNTRY_TO_STATE ( ##COUNTRY )
STATE => ##STATE_TO_STATE ( ##STATE )
STATE => ##CITY_TO_STATE ( ##CITY )
STATE => ##RIVER_TO_STATE ( ##RIVER )
STATE => ##PLACE_TO_STATE ( ##PLACE )

CITY => ##CITY_TO_CITY ( ##CITY )
CITY => ##STATE_TO_CITY ( ##STATE )
CITY => ##COUNTRY_TO_CITY ( ##COUNTRY )

NUMBER => ##ANY_TO_NUMBER ( ##ANY )
NUMBER => ##NUMBER_TO_NUMBER ( ##NUMBER )
NUMBER => ##STATE_TO_NUMBER ( ##STATE )
NUMBER => ##CITY_TO_NUMBER ( ##CITY )
NUMBER => ##RIVER_TO_NUMBER ( ##RIVER )
NUMBER => ##PLACE_TO_NUMBER ( ##PLACE )

ANY => ##STATE
ANY => ##RIVER
ANY => ##PLACE
ANY => ##CITY

STATE => exclude ( ##STATE , ##STATE )
RIVER => exclude ( ##RIVER , ##RIVER )
PLACE => exclude ( ##PLACE , ##PLACE )
CITY => exclude ( ##CITY , ##CITY )

STATE => intersection ( ##STATE , ##STATE )
RIVER => intersection ( ##RIVER , ##RIVER )
PLACE => intersection ( ##PLACE , ##PLACE )
CITY => intersection ( ##CITY , ##CITY )
CITY => intersection ( ##CITY , ##PLACE )

SUPERLATIVE_3 => most
SUPERLATIVE_3 => fewest

STATE => ##SUPERLATIVE_3 ( ##STATE , ##STATE_TO_STATE , ##STATE )
STATE => ##SUPERLATIVE_3 ( ##STATE , ##RIVER_TO_STATE , ##RIVER )
STATE => ##SUPERLATIVE_3 ( ##STATE , ##CITY_TO_STATE , ##CITY )
STATE => ##SUPERLATIVE_3 ( ##STATE , ##PLACE_TO_STATE , ##PLACE )
RIVER => ##SUPERLATIVE_3 ( ##RIVER , ##STATE_TO_RIVER , ##STATE )

SUPERLATIVE_2 => largest_one
SUPERLATIVE_2 => smallest_one

STATE => ##SUPERLATIVE_2 ( ##STATE_TO_NUMBER , ##STATE )
RIVER => ##SUPERLATIVE_2 ( ##RIVER_TO_NUMBER , ##RIVER )
CITY => ##SUPERLATIVE_2 ( ##CITY_TO_NUMBER , ##CITY )
PLACE => ##SUPERLATIVE_2 ( ##PLACE_TO_NUMBER , ##PLACE )
